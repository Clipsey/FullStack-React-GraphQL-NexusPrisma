generator photon {
  provider = "photonjs"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

enum MessageType {
  TEXT
  PICTURE
  LOCATION
}

// model UserTest {
//   id        Int      @id
//   profile   ProfileTest? @relation(references: [id])
// }
// model ProfileTest {
//   id   Int    @id
//   user User
// }

// model User {
//   id        Int        @id
//   customer  Profile?   @relation(references: id)
// }
// model Profile {
//   id    Int     @id
//   user  User?
// }


model User {
  id         String   @default(cuid()) @id
  email      String   @unique
  password   String
  name       String?
  posts      Post[]
  username   String?  @unique
  picture    String?
  chats      Chat[]   @relation(name: "ChatMembers")
  chatsOwned Chat[]   @relation(name: "ChatAdmin")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chat {
  id        String        @default(cuid()) @id
  name      String?
  picture   String?
  members   User[]        @relation(name: "ChatMembers")
  owner     User          @relation(name: "ChatAdmin")
  messsages ChatMessage[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model ChatMessage {
  id        String      @default(cuid()) @id
  chat      Chat
  sender    User
  content   String?
  createdAt DateTime    @default(now())
  type      MessageType
}

model Post {
  id        String   @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String
  content   String?
  author    User
}